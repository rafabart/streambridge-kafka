spring:
  cloud:
    stream:
      defaultBinder: kafka_key_bytes
      function:
        definition: receiveAmqp;receiveKafka;receiveKafkaAvro;

      bindings:
        customer-exchange-amqp:
          binder: rabbit_amqp
          destination: customer-exchange-amqp
          producer:
            requiredGroups: customer-queue

        customer-topic:
          binder: kafka_key_string
          destination: customer-topic

        customer-topic-bytes:
          binder: kafka_key_bytes
          destination: customer-topic-bytes

        customer-topic-avro:
          binder: kafka_avro_producer
          destination: customer-topic-avro
          contentType: application/*+avro
          useNativeEncoding: true

        receiveAmqp-in-0:
          binder: rabbit_amqp
          destination: customer-exchange-amqp
          consumer:
            group: customer-queue

        receiveKafka-in-0:
          binder: kafka_key_string
          destination: customer-topic

        receiveKafkaAvro-in-0:
          binder: kafka_avro_consumer
          destination: customer-topic-avro
          contentType: application/*+avro
          useNativeEncoding: true


      binders:
        kafka_key_string:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      producer-properties:
                        key.serializer: org.apache.kafka.common.serialization.StringSerializer
                      brokers: http://localhost:9092

        kafka_key_bytes:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    default:
                      binder:
                        brokers: http://localhost:9092

        kafka_avro_producer:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      producer-properties:
                        #key.serializer: org.apache.kafka.common.serialization.StringSerializer
                        value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
                        schema.registry.url: http://localhost:8085
                      brokers: http://localhost:9092

        kafka_avro_consumer:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      consumer-properties:
                        value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
                        schema.registry.url: http://localhost:8085
                        specific.avro.reader: true
                      brokers: http://localhost:9092

        rabbit_amqp:
          type: rabbit
          environment:
            spring:
              rabbitmq:
                host: localhost
                port: 5672
                username: guest
                password: guest